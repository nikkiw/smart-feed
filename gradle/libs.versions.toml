[versions]
agp = "8.10.1"
kotlin = "2.1.10"
coreKtx = "1.16.0"

appcompat = "1.7.0"
kotlinTestJunit = "2.1.10"
kotlinxCoroutinesCore = "1.10.2"
material = "1.12.0"

# Base component
gson = "2.11.0"
decompose = "3.3.0"

# Database
room = "2.7.1"
pagging = "3.3.6"

# KSP, Hilt and Dependency Injection
ksp = "2.1.10-1.0.30"
hilt = "2.55"

# Networking
retrofit = "2.11.0"
okhttp = "4.12.0"

# Tests
junit4 = "4.13.2"
junitVersion = "1.2.1"
espressoCore = "3.6.1"
rules = "1.6.1"
benchmark = "1.3.4"
runner = "1.6.2"
benchmarkJunit4 = "1.3.4"
# kaspesso = "1.5.2"
robolectric = "4.12.1"
testCoreKtx = "1.6.1"
testKotlinCoroutines = "1.10.2"
mockk = "1.14.2"

# Mock server
ktor = "2.3.4"
ktorServerCoreJvm = "2.3.4"
logbackClassic = "1.4.11"
kotlinStdlib = "2.1.20"
kotlinTest = "2.1.10"
core = "1.6.1"

[libraries]
androidx-core-ktx = { group = "androidx.core", name = "core-ktx", version.ref = "coreKtx" }
androidx-appcompat = { group = "androidx.appcompat", name = "appcompat", version.ref = "appcompat" }
kotlin-test-junit = { module = "org.jetbrains.kotlin:kotlin-test-junit", version.ref = "kotlinTestJunit" }
kotlinx-coroutines-core = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-core", version.ref = "kotlinxCoroutinesCore" }
material = { group = "com.google.android.material", name = "material", version.ref = "material" }

# Base component
gson = { group = "com.google.code.gson", name = "gson", version.ref = "gson" }

# Decompose
decompose = { group = "com.arkivanov.decompose", name = "decompose", version.ref = "decompose" }
decompose-extensions-android = { group = "com.arkivanov.decompose", name = "extensions-android", version.ref = "decompose" }

# DI
hilt-android-core = { group = "com.google.dagger", name = "hilt-android", version.ref = "hilt" }
hilt-compiler = { group = "com.google.dagger", name = "hilt-android-compiler", version.ref = "hilt" }

# Database
room-compiler = { group = "androidx.room", name = "room-compiler", version.ref = "room" }
room-ktx = { group = "androidx.room", name = "room-ktx", version.ref = "room" }
room-runtime = { group = "androidx.room", name = "room-runtime", version.ref = "room" }
room-testing = { group = "androidx.room", name = "room-testing", version.ref = "room" }
room-common = { group = "androidx.room", name = "room-common", version.ref = "room" }
room-runtime-android = { group = "androidx.room", name = "room-runtime-android", version.ref = "room" }
room-paging = { group = "androidx.room", name = "room-paging", version.ref = "room" }
androidx-pagging-ktx = { group = "androidx.paging", name = "paging-runtime-ktx", version.ref = "pagging" }

# Networks
retrofit = { group = "com.squareup.retrofit2", name = "retrofit", version.ref = "retrofit" }
retrofit-converter-gson = { group = "com.squareup.retrofit2", name = "converter-gson", version.ref = "retrofit" }
okhttp = { group = "com.squareup.okhttp3", name = "okhttp", version.ref = "okhttp" }
okhttp-logging-interceptor = { group = "com.squareup.okhttp3", name = "logging-interceptor", version.ref = "okhttp" }

# Tests
junit4 = { group = "junit", name = "junit", version.ref = "junit4" }
androidx-junit = { group = "androidx.test.ext", name = "junit", version.ref = "junitVersion" }
androidx-espresso-core = { group = "androidx.test.espresso", name = "espresso-core", version.ref = "espressoCore" }
androidx-test-rules = { group = "androidx.test", name = "rules", version.ref = "rules" }
androidx-test-core-ktx = { group = "androidx.test", name = "core-ktx", version.ref = "testCoreKtx" }
kotlin-coroutines-test = { group = "org.jetbrains.kotlinx", name = "kotlinx-coroutines-test", version.ref = "testKotlinCoroutines" }
mockk = { group = "io.mockk", name = "mockk", version.ref = "mockk" }


androidx-runner = { group = "androidx.test", name = "runner", version.ref = "runner" }
androidx-benchmark-junit4 = { group = "androidx.benchmark", name = "benchmark-junit4", version.ref = "benchmarkJunit4" }
# kaspresso = { group = "com.kaspersky.android-components", name = "kaspresso", version.ref = "kaspesso"}
robolectric = { group = "org.robolectric", name = "robolectric", version.ref = "robolectric" }

# Build plugins
android-gradlePlugin = { group = "com.android.tools.build", name = "gradle", version.ref = "agp" }
kotlin-gradlePlugin = { group = "org.jetbrains.kotlin", name = "kotlin-gradle-plugin", version.ref = "kotlin" }
ksp-gradlePlugin = { group = "com.google.devtools.ksp", name = "symbol-processing-gradle-plugin", version.ref = "ksp" }
hilt-gradlePlugin = { group = "com.google.dagger", name = "hilt-android-gradle-plugin", version.ref = "hilt" }

# Mock server
ktor-serialization-kotlinx-json-jvm = { module = "io.ktor:ktor-serialization-kotlinx-json-jvm", version.ref = "ktorServerCoreJvm" }
ktor-server-call-logging-jvm = { module = "io.ktor:ktor-server-call-logging-jvm", version.ref = "ktorServerCoreJvm" }
ktor-server-content-negotiation-jvm = { module = "io.ktor:ktor-server-content-negotiation-jvm", version.ref = "ktorServerCoreJvm" }
ktor-server-core-jvm = { module = "io.ktor:ktor-server-core-jvm", version.ref = "ktorServerCoreJvm" }
ktor-server-netty-jvm = { module = "io.ktor:ktor-server-netty-jvm", version.ref = "ktorServerCoreJvm" }
ktor-server-tests-jvm = { module = "io.ktor:ktor-server-tests-jvm", version.ref = "ktorServerCoreJvm" }
logback-classic = { module = "ch.qos.logback:logback-classic", version.ref = "logbackClassic" }
kotlin-stdlib = { group = "org.jetbrains.kotlin", name = "kotlin-stdlib", version.ref = "kotlinStdlib" }
kotlin-test = { group = "org.jetbrains.kotlin", name = "kotlin-test", version.ref = "kotlinTest" }
androidx-core = { group = "androidx.test", name = "core", version.ref = "core" }

[plugins]
android-application = { id = "com.android.application", version.ref = "agp" }
kotlin-android = { id = "org.jetbrains.kotlin.android", version.ref = "kotlin" }
android-library = { id = "com.android.library", version.ref = "agp" }
benchmark = { id = "androidx.benchmark", version.ref = "benchmark" }
ksp = { id = "com.google.devtools.ksp", version.ref = "ksp" }
hilt = { id = "com.google.dagger.hilt.android", version.ref = "hilt" }

# Mock server
kotlin-jvm = { id = "org.jetbrains.kotlin.jvm", version.ref = "kotlin" }
ktor = { id = "io.ktor.plugin", version.ref = "ktor" }
kotlin-multiplatform = { id = "org.jetbrains.kotlin.multiplatform", version.ref = "kotlin" }
android-kotlin-multiplatform-library = { id = "com.android.kotlin.multiplatform.library", version.ref = "agp" }
kotlin-serialization = { id = "org.jetbrains.kotlin.plugin.serialization", version.ref = "kotlin" }


[bundles]
decompose-libs = ["decompose", "decompose-extensions-android"]